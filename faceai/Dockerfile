# This adaptive Dockerfile is generated by 'generate-Dockerfile.sh' from parts within src/
# Use NVIDIA CUDA as base image and run the same installation as in the other packages.
# The version of cudatoolkit must match those of the base image, see Dockerfile.pytorch
#FROM nvidia/cuda:10.1-base-ubuntu18.04
#LABEL maintainer="Christoph Schranz <christoph.schranz@salzburgresearch.at>"
FROM nvidia/cuda:11.0-base
CMD nvidia-smi
# This is a concatenated Dockerfile, the maintainers of subsequent sections may vary.
############################################################################
#################### Dependency: jupyter/base-image ########################
############################################################################
# Copyright (c) Jupyter Development Team.
# Distributed under the terms of the Modified BSD License.
# Ubuntu 20.04 (focal)
# https://hub.docker.com/_/ubuntu/?tab=tags&name=focal
# OS/ARCH: linux/amd64
ARG ROOT_CONTAINER=ubuntu:focal-20200423@sha256:238e696992ba9913d24cfc3727034985abd136e08ee3067982401acdc30cbf3f
LABEL maintainer="Jupyter Project <jupyter@googlegroups.com>"
ARG NB_USER="srijan"
ARG NB_UID="1000"
ARG NB_GID="100"
# Fix DL4006
SHELL ["/bin/bash", "-o", "pipefail", "-c"]
USER root
# Install all OS dependencies for notebook server that starts but lacks all
# features (e.g., download as all possible file formats)
ENV DEBIAN_FRONTEND noninteractive
RUN apt-get update -y
RUN apt-get install -yq --no-install-recommends  -y
RUN apt-get install libglib2.0-0  -y
RUN apt-get install libsm6  -y
RUN apt-get install libxrender1  -y
RUN apt-get install libxext6 -y
RUN apt-get install libgl1-mesa-glx  -y
RUN apt-get install python3-distutils  -y
RUN apt-get install wget  -y
RUN apt-get install bzip2  -y
RUN apt-get install ca-certificates  -y
RUN apt-get install sudo  -y
RUN apt-get install locales  -y
RUN apt-get install fonts-liberation  -y
RUN apt-get install run-one  -y
RUN apt-get clean && rm -rf /var/lib/apt/lists/*
RUN echo "en_US.UTF-8 UTF-8" > /etc/locale.gen && \
    locale-gen
RUN apt-get update -y
RUN apt-get install libgtk2.0-dev -y
# Configure environment
ENV CONDA_DIR=/opt/conda \
    SHELL=/bin/bash \
    NB_USER=$NB_USER \
    NB_UID=$NB_UID \
    NB_GID=$NB_GID \
    LC_ALL=en_US.UTF-8 \
    LANG=en_US.UTF-8 \
    LANGUAGE=en_US.UTF-8
ENV PATH=$CONDA_DIR/bin:$PATH \
    HOME=/home/$NB_USER
# Copy a script that we will use to correct permissions after running certain commands
COPY fix-permissions /usr/local/bin/fix-permissions
RUN chmod a+rx /usr/local/bin/fix-permissions
# Enable prompt color in the skeleton .bashrc before creating the default NB_USER
RUN sed -i 's/^#force_color_prompt=yes/force_color_prompt=yes/' /etc/skel/.bashrc
# Create NB_USER wtih name jovyan user with UID=1000 and in the 'users' group
# and make sure these dirs are writable by the `users` group.
RUN echo "auth requisite pam_deny.so" >> /etc/pam.d/su 
RUN sed -i.bak -e 's/^%admin/#%admin/' /etc/sudoers 
RUN sed -i.bak -e 's/^%sudo/#%sudo/' /etc/sudoers 
RUN useradd -m -s /bin/bash -N -u $NB_UID $NB_USER 
RUN mkdir -p $CONDA_DIR 
RUN chown $NB_USER:$NB_GID $CONDA_DIR 
RUN chmod g+w /etc/passwd 
# RUN fix-permissions $HOME 
# RUN fix-permissions $CONDA_DIR
USER $NB_UID
WORKDIR $HOME
ARG PYTHON_VERSION='default' 
# Setup work directory for backward-compatibility
RUN mkdir /home/$NB_USER/work 
    # fix-permissions /home/$NB_USER

# Install conda as jovyan and check the md5 sum provided on the download site
ENV MINICONDA_VERSION=4.9.2 \
    MINICONDA_MD5=3143b1116f2d466d9325c206b7de88f7 \
    CONDA_VERSION=4.9.2
WORKDIR /tmp  
RUN wget --quiet https://repo.continuum.io/miniconda/Miniconda3-py37_${MINICONDA_VERSION}-Linux-x86_64.sh && \
    echo "${MINICONDA_MD5} *Miniconda3-py37_${MINICONDA_VERSION}-Linux-x86_64.sh" | md5sum -c - && \
    /bin/bash Miniconda3-py37_${MINICONDA_VERSION}-Linux-x86_64.sh -f -b -p $CONDA_DIR && \
    rm Miniconda3-py37_${MINICONDA_VERSION}-Linux-x86_64.sh && \
    echo "conda ${CONDA_VERSION}" >> $CONDA_DIR/conda-meta/pinned && \
    conda config --system --prepend channels conda-forge && \
    conda config --system --set auto_update_conda false && \
    conda config --system --set show_channel_urls true && \
    conda config --system --set channel_priority strict && \
    if [ ! $PYTHON_VERSION = 'default' ]; then conda install --yes python=$PYTHON_VERSION; fi && \
    conda list python | grep '^python ' | tr -s ' ' | cut -d '.' -f 1,2 | sed 's/$/.*/' >> $CONDA_DIR/conda-meta/pinned && \
    conda install --quiet --yes conda && \
    conda install --quiet --yes pip && \
    conda update --all --quiet --yes && \
    conda clean --all -f -y && \
    rm -rf /home/$NB_USER/.cache/yarn 
    # fix-permissions $CONDA_DIR && \
    # fix-permissions /home/$NB_USER

# Install Python 3 packages
RUN conda install --quiet --yes \
    'flask' \
    'flask-restful' \
    'pathlib' \
    'mkl' \
    && \
    conda clean --all -f -y 
USER $NB_UID
WORKDIR $HOME
############################################################################
########################## Dependency: gpulibs #############################
############################################################################
LABEL maintainer="Christoph Schranz <christoph.schranz@salzburgresearch.at>"
# Install Tensorflow, check compatibility here: https://www.tensorflow.org/install/gpu
RUN pip install --upgrade pip
RUN pip install torch torchvision
RUN pip install --no-cache-dir gunicorn
RUN conda install -c conda-forge dlib
RUN conda install -c fastai opencv-python-headless
# RUN pip install opencv-python-headless
# Clean installation
RUN conda clean --all -f -y 
    # fix-permissions $CONDA_DIR && \
    # fix-permissions /home/$NB_USER
############################################################################
##########################  #############################
############################################################################
USER $NB_UID
WORKDIR $HOME
ENV HOME=/home/$NB_USER
RUN mkdir /home/$NB_USER/Facerecon_API 
    # fix-permissions /home/$NB_USER/Facerecon_API
COPY . /home/$NB_USER/Facerecon_API
USER $NB_UID
WORKDIR /home/$NB_USER/Facerecon_API
EXPOSE 8700